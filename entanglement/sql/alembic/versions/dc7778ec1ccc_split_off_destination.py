# Copyright (C) 2018, Hadron Industries, Inc.
# Entanglement is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License version 3
# as published by the Free Software Foundation. It is distributed
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the file
# LICENSE for details.

"""Split off destination

Revision ID: dc7778ec1ccc
Revises: 5370406b7505
Create Date: 2018-03-29 10:00:19.892226

"""
from alembic import op
import sqlalchemy as sa
import entanglement


# revision identifiers, used by Alembic.
revision = 'dc7778ec1ccc'
down_revision = '5370406b7505'
branch_labels = None
depends_on = None

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column( 'sync_owners', sa.Column('dest_hash', entanglement.util.SqlDestHash(length=60), nullable=True))
    op.execute('update sync_owners set dest_hash = (select dest_hash from sync_destinations sd where sd.id = destination_id)')
    with op.batch_alter_table('sync_owners', naming_convention = entanglement.sql.base.migration_naming_convention) as s_o:
        s_o.create_index(op.f('ix_sync_owners_dest_hash'),  ['dest_hash'], unique=False)
        s_o.drop_index('ix_sync_owners_destination_id')
        s_o.drop_constraint("sync_owners_destination_id_fkey",  type_='foreignkey')
        s_o.drop_column('destination_id')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sync_owners', sa.Column('destination_id', sa.INTEGER(), nullable=True))
    op.execute('update sync_owners set destination_id = (select sd.id from sync_destinations sd where sd.dest_hash = sync_owners.dest_hash)')
    op.create_foreign_key('sync_owners_destination_id_fkey', 'sync_owners', 'sync_destinations', ['destination_id'], ['id'])
    op.create_index('ix_sync_owners_destination_id', 'sync_owners', ['destination_id'], unique=False)
    with op.batch_alter_table('sync_owners', naming_convention = entanglement.sql.base.migration_naming_convention) as s_o:
        s_o.drop_index(op.f('ix_sync_owners_dest_hash'))
        s_o.drop_column( 'dest_hash')
    ### end Alembic commands ###
